Index: app/src/main/java/android/tvz/hr/pedometer/mock/MockHistory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package android.tvz.hr.pedometer.mock\r\n\r\nimport android.tvz.hr.pedometer.Step\r\nimport android.tvz.hr.pedometer.StepCounterService\r\nimport com.dbflow5.structure.save\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\nimport kotlin.random.Random\r\n\r\nclass MockHistory {\r\n\r\n    companion object {\r\n        fun generateMockSteps(numSteps: Int) {\r\n            var id_counter = StepCounterService.id_counter\r\n\r\n            val steps: ArrayList<Step> = ArrayList()\r\n\r\n\r\n\r\n            for (i in 1..numSteps) {\r\n                steps.add(Step(id_counter, Random.nextInt(1000, 5000), Date(Date().time - (i * 24 * 3600 * 1000).toLong())))\r\n                StepCounterService.id_counter++\r\n                id_counter = StepCounterService.id_counter\r\n            }\r\n            steps.forEach { step ->\r\n                step.save()\r\n            }\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/tvz/hr/pedometer/mock/MockHistory.kt	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ app/src/main/java/android/tvz/hr/pedometer/mock/MockHistory.kt	(date 1592054581400)
@@ -11,16 +11,14 @@
 
     companion object {
         fun generateMockSteps(numSteps: Int) {
-            var id_counter = StepCounterService.id_counter
+            var id_counter = StepCounterService.step.id
 
             val steps: ArrayList<Step> = ArrayList()
 
-
-
             for (i in 1..numSteps) {
                 steps.add(Step(id_counter, Random.nextInt(1000, 5000), Date(Date().time - (i * 24 * 3600 * 1000).toLong())))
-                StepCounterService.id_counter++
-                id_counter = StepCounterService.id_counter
+                StepCounterService.step.id++
+                id_counter = StepCounterService.step.id
             }
             steps.forEach { step ->
                 step.save()
Index: app/src/main/java/android/tvz/hr/pedometer/fragments/HistoryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package android.tvz.hr.pedometer.fragments\r\n\r\nimport android.os.Bundle\r\nimport android.tvz.hr.pedometer.R\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.Fragment\r\n\r\nclass HistoryFragment : Fragment() {\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        return inflater.inflate(R.layout.fragment_history, container, false)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/tvz/hr/pedometer/fragments/HistoryFragment.kt	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ app/src/main/java/android/tvz/hr/pedometer/fragments/HistoryFragment.kt	(date 1592054415461)
@@ -2,10 +2,18 @@
 
 import android.os.Bundle
 import android.tvz.hr.pedometer.R
+import android.tvz.hr.pedometer.Step
+import android.tvz.hr.pedometer.adapters.HistoryRecyclerViewAdapter
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
 import androidx.fragment.app.Fragment
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.dbflow5.query.NameAlias
+import com.dbflow5.query.list
+import com.dbflow5.query.select
+import com.dbflow5.query.update
+import kotlinx.android.synthetic.main.fragment_history.*
 
 class HistoryFragment : Fragment() {
 
@@ -17,4 +25,24 @@
         return inflater.inflate(R.layout.fragment_history, container, false)
     }
 
-}
\ No newline at end of file
+    override fun onActivityCreated(savedInstanceState: Bundle?) {
+        super.onActivityCreated(savedInstanceState)
+
+        updateHistory()
+    }
+
+    override fun onResume() {
+        super.onResume()
+
+        updateHistory()
+    }
+
+    private fun updateHistory() {
+        val historyList: List<Step> = (select from Step::class.java).orderBy(nameAlias = NameAlias("date"), ascending = false).list
+
+        history_recycler_view.adapter = HistoryRecyclerViewAdapter(historyList)
+        history_recycler_view.layoutManager = LinearLayoutManager(context)
+        history_recycler_view.setHasFixedSize(true)
+    }
+
+}
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n\r\n    </style>\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ app/src/main/res/values/styles.xml	(date 1592052735361)
@@ -3,9 +3,9 @@
     <!-- Base application theme. -->
     <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
         <!-- Customize your theme here. -->
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
+        <item name="colorPrimary">@color/paradisePink</item>
+        <item name="colorPrimaryDark">@color/paradisePinkDark</item>
+        <item name="colorAccent">@color/pacificBlue</item>
 
     </style>
 
Index: app/src/main/java/android/tvz/hr/pedometer/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package android.tvz.hr.pedometer\r\n\r\n\r\nimport android.app.AlarmManager\r\nimport android.app.NotificationChannel\r\nimport android.app.NotificationManager\r\nimport android.app.PendingIntent\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.tvz.hr.pedometer.fragments.AchievementsFragment\r\nimport android.tvz.hr.pedometer.fragments.HistoryFragment\r\nimport android.tvz.hr.pedometer.fragments.HomeFragment\r\nimport android.tvz.hr.pedometer.mock.MockHistory\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.NotificationCompat\r\nimport androidx.core.app.NotificationManagerCompat\r\nimport androidx.fragment.app.Fragment\r\nimport com.dbflow5.config.FlowConfig\r\nimport com.dbflow5.config.FlowManager\r\nimport com.dbflow5.config.FlowManager.context\r\nimport kotlinx.android.synthetic.main.main_activity.*\r\nimport java.util.*\r\n\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    companion object {\r\n        var active = false\r\n    }\r\n\r\n    private val TAG: String = \"MainActivityTag\"\r\n    private lateinit var textView: TextView\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.main_activity)\r\n\r\n        supportFragmentManager.beginTransaction().replace(R.id.fragment_container, HomeFragment()).commit()\r\n\r\n        bottom_navigation.setOnNavigationItemSelectedListener { item ->\r\n\r\n            var selectedFragment: Fragment? = null\r\n\r\n             when(item.itemId) {\r\n                 R.id.menu_main -> {\r\n                     selectedFragment = HomeFragment()\r\n                     true\r\n                 }\r\n                 R.id.menu_achievements -> {\r\n                     selectedFragment = AchievementsFragment()\r\n                     true\r\n                 }\r\n                 R.id.menu_history -> {\r\n                     selectedFragment = HistoryFragment()\r\n                     true\r\n                 }\r\n                 else -> false\r\n             }\r\n\r\n            supportFragmentManager.beginTransaction().replace(R.id.fragment_container, selectedFragment!!).commit()\r\n\r\n            return@setOnNavigationItemSelectedListener true\r\n        }\r\n\r\n        // Initialize DBFlow\r\n        FlowManager.init(\r\n            FlowConfig.builder(this)\r\n            .openDatabasesOnInit(true)\r\n            .build())\r\n\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) run {\r\n            val channel = NotificationChannel(\r\n                \"MYCHANNEL\",\r\n                \"Notification channel\",\r\n                NotificationManager.IMPORTANCE_DEFAULT\r\n            )\r\n            channel.description = \"Channel Description\"\r\n            val man = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\r\n            man.createNotificationChannel(channel)\r\n\r\n        }\r\n\r\n\r\n        val intent = Intent(this, StepCounterService::class.java)\r\n\r\n        startService(intent)\r\n\r\n        // Generate mock steps for testing purpose\r\n        MockHistory.generateMockSteps(3)\r\n\r\n\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        active = true\r\n\r\n        //startService(intent)\r\n        //\r\n\r\n        if(!StepCounterService.active) {\r\n            startService(intent)\r\n        }\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        active = false\r\n    }\r\n\r\n    override fun onStop() {\r\n        super.onStop()\r\n        active = false\r\n\r\n        // Maybe do something\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        active = false\r\n\r\n        //unregisterReceiver(broadcastReceiver)\r\n        //stopService(intent)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/tvz/hr/pedometer/MainActivity.kt	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ app/src/main/java/android/tvz/hr/pedometer/MainActivity.kt	(date 1592053875529)
@@ -1,12 +1,11 @@
 package android.tvz.hr.pedometer
 
 
-import android.app.AlarmManager
 import android.app.NotificationChannel
 import android.app.NotificationManager
-import android.app.PendingIntent
 import android.content.Context
 import android.content.Intent
+import android.content.SharedPreferences
 import android.os.Build
 import android.os.Bundle
 import android.tvz.hr.pedometer.fragments.AchievementsFragment
@@ -86,12 +85,22 @@
         }
 
 
+        val sharedPreferences: SharedPreferences = getSharedPreferences("prefs", Context.MODE_PRIVATE)
+        val firstStart: Boolean = sharedPreferences.getBoolean("firstStart", true)
+
+
         val intent = Intent(this, StepCounterService::class.java)
 
         startService(intent)
 
+        // Everything that should be called only once per app install should be put in here
         // Generate mock steps for testing purpose
-        MockHistory.generateMockSteps(3)
+        if(firstStart) {
+            MockHistory.generateMockSteps(10)
+
+            val sharedPreferencesEditor: SharedPreferences.Editor = sharedPreferences.edit()
+            sharedPreferencesEditor.putBoolean("firstStart", false).apply()
+        }
 
 
     }
Index: app/src/main/java/android/tvz/hr/pedometer/adapters/HistoryRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/android/tvz/hr/pedometer/adapters/HistoryRecyclerViewAdapter.kt	(date 1592054212507)
+++ app/src/main/java/android/tvz/hr/pedometer/adapters/HistoryRecyclerViewAdapter.kt	(date 1592054212507)
@@ -0,0 +1,42 @@
+package android.tvz.hr.pedometer.adapters
+
+import android.tvz.hr.pedometer.R
+import android.tvz.hr.pedometer.Step
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import kotlinx.android.synthetic.main.history_screen_item_card.view.*
+import java.util.*
+
+class HistoryRecyclerViewAdapter(private val historyList: List<Step>): RecyclerView.Adapter<HistoryRecyclerViewAdapter.HistoryViewHolder>() {
+
+    class HistoryViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
+        val historyDate: TextView = itemView.history_date
+        val historySteps: TextView = itemView.history_step_count
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.history_screen_item_card, parent, false)
+
+        return HistoryViewHolder(itemView)
+    }
+
+    override fun getItemCount(): Int = historyList.size
+
+    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {
+        val currentItem = historyList[position]
+
+        holder.historyDate.text = convertDateToString(currentItem.date)
+        holder.historySteps.text = currentItem.stepCount.toString()
+    }
+
+    private fun convertDateToString(date: Date): String {
+
+        val calendar: Calendar = Calendar.getInstance()
+        calendar.time = date
+
+        return "${calendar.get(Calendar.DAY_OF_MONTH)}.${calendar.get(Calendar.MONTH)}.${calendar.get(Calendar.YEAR)}."
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_history.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/richBlack\">\r\n\r\n    <TextView\r\n        android:layout_width=\"167dp\"\r\n        android:layout_height=\"59dp\"\r\n        android:layout_gravity=\"center\"\r\n        android:text=\"Welcome to history screen!\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_history.xml	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ app/src/main/res/layout/fragment_history.xml	(date 1592052109398)
@@ -1,13 +1,20 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical" android:layout_width="match_parent"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@color/richBlack">
 
-    <TextView
-        android:layout_width="167dp"
-        android:layout_height="59dp"
-        android:layout_gravity="center"
-        android:text="Welcome to history screen!" />
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/history_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="vertical"
+        android:padding="4dp"
+        android:clipToPadding="false"
+        tools:listitem="@layout/history_screen_item_card"
+        android:background="@color/richBlack"
+        />
 
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/history_screen_item_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/history_screen_item_card.xml	(date 1592054107325)
+++ app/src/main/res/layout/history_screen_item_card.xml	(date 1592054107325)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/paradisePinkDark"
+        android:padding="10dp"
+        android:orientation="horizontal"
+        >
+
+        <TextView
+            android:id="@+id/history_date"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="History item"
+            android:textSize="18sp"
+            android:layout_marginHorizontal="4dp"
+            android:padding="2dp"
+            android:textColor="@color/ghostWhite"
+            android:gravity="start"
+            />
+
+        <TextView
+            android:id="@+id/history_step_count"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="end"
+            android:layout_marginHorizontal="4dp"
+            android:gravity="end"
+            android:text="Step count"
+            android:textColor="@color/ghostWhite"
+            android:textSize="18sp" />
+    </LinearLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 3f4964f59bb3fb233018478fa157dcf918b5ae7f)
+++ .idea/gradle.xml	(date 1592045909025)
@@ -14,6 +14,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
